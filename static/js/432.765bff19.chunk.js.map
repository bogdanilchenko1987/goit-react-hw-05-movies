{"version":3,"file":"static/js/432.765bff19.chunk.js","mappings":"+SAEMA,EAAW,gCACXC,EAAU,mCAIVC,EAAyB,SAElBC,EAAW,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAYFC,EAAAA,EAAAA,IAAU,GAADC,OAC3Bb,GAAQa,OAjBY,qBAiBS,aAAAA,OAAYZ,IAC5C,KAAD,EAFa,OAARO,EAAQC,EAAAK,KAAAL,EAAAM,OAAA,SAGPP,EAASQ,MAAI,wBAAAP,EAAAQ,OAAA,GAAAV,EAAA,KACrB,kBAhBuB,OAAAH,EAAAc,MAAA,KAAAC,UAAA,KAoBXC,EAAkB,eAAAC,GAAAhB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAgB,EAAMC,GAAK,IAAAf,EAAA,OAAAF,IAAAA,MAAA,SAAAkB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAAAa,EAAAb,KAAA,EACpBC,EAAAA,EAAAA,IAAU,GAADC,OAC3Bb,GAAQa,OAzBmB,eAyBS,WAAAA,OAAUU,EAAK,aAAAV,OAAYZ,IAClE,KAAD,EAFa,OAARO,EAAQgB,EAAAV,KAAAU,EAAAT,OAAA,SAGPP,EAASQ,MAAI,wBAAAQ,EAAAP,OAAA,GAAAK,EAAA,KACrB,gBAL8BG,GAAA,OAAAJ,EAAAH,MAAA,KAAAC,UAAA,KASlBO,EAAe,eAAAC,GAAAtB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAsB,EAAMC,GAAE,IAAArB,EAAA,OAAAF,IAAAA,MAAA,SAAAwB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,cAAAmB,EAAAnB,KAAA,EACdC,EAAAA,EAAAA,IAAU,GAADC,OAC3Bb,GAAQa,OAAGX,GAAsBW,OAAGgB,EAAE,aAAAhB,OAAYZ,IACrD,KAAD,EAFa,OAARO,EAAQsB,EAAAhB,KAAAgB,EAAAf,OAAA,SAGPP,EAASQ,MAAI,wBAAAc,EAAAb,OAAA,GAAAW,EAAA,KACrB,gBAL2BG,GAAA,OAAAJ,EAAAT,MAAA,KAAAC,UAAA,KASfa,EAAkB,eAAAC,GAAA5B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA4B,EAAML,GAAE,IAAArB,EAAA,OAAAF,IAAAA,MAAA,SAAA6B,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAxB,MAAA,cAAAwB,EAAAxB,KAAA,EACjBC,EAAAA,EAAAA,IAAU,GAADC,OAC3Bb,GAAQa,OAAGX,GAAsBW,OAAGgB,EAAE,qBAAAhB,OAAoBZ,IAC7D,KAAD,EAFa,OAARO,EAAQ2B,EAAArB,KAAAqB,EAAApB,OAAA,SAGPP,EAASQ,MAAI,wBAAAmB,EAAAlB,OAAA,GAAAiB,EAAA,KACrB,gBAL8BE,GAAA,OAAAH,EAAAf,MAAA,KAAAC,UAAA,KAOlBkB,EAAkB,eAAAC,GAAAjC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAiC,EAAMV,GAAE,IAAArB,EAAA,OAAAF,IAAAA,MAAA,SAAAkC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,cAAA6B,EAAA7B,KAAA,EACjBC,EAAAA,EAAAA,IAAU,GAADC,OAC3Bb,GAAQa,OAAGX,GAAsBW,OAAGgB,EAAE,qBAAAhB,OAAoBZ,IAC7D,KAAD,EAFa,OAARO,EAAQgC,EAAA1B,KAAA0B,EAAAzB,OAAA,SAGPP,EAASQ,MAAI,wBAAAwB,EAAAvB,OAAA,GAAAsB,EAAA,KACrB,gBAL8BE,GAAA,OAAAH,EAAApB,MAAA,KAAAC,UAAA,I,wJCnDlBuB,EAAiBC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8IAQ1BC,EAAYH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,iJASrBG,EAAWL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,4CAKrBK,EAAYP,EAAAA,GAAAA,GAASQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,sEAMrBO,GAAaT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAYW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,qK,SCtBzBU,EAAa,SAAHnD,GAA2B,IAArBoD,EAAMpD,EAANoD,OAAQC,EAAKrD,EAALqD,MAC7BC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,QAAME,SAAUN,EAAOK,SAAA,EACrBE,EAAAA,EAAAA,KAAA,SACEC,KAAK,QACLC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,mBAEdL,EAAAA,EAAAA,KAAA,UAAQE,KAAK,SAAQJ,SAAC,cAEvBQ,QAAQZ,EAAMa,UACbP,EAAAA,EAAAA,KAACX,EAAU,CAACmB,GAAI,UAAWC,MAAO,CAAEC,KAAMf,GAAWG,SAAC,mBAKvDQ,QAAQZ,EAAMa,UACbP,EAAAA,EAAAA,KAACrB,EAAc,CAAAmB,SACZJ,EAAMiB,KAAI,SAAAC,GAAI,OACbZ,EAAAA,EAAAA,KAACjB,EAAS,CAAAe,UACRD,EAAAA,EAAAA,MAACP,EAAAA,GAAI,CACHkB,GAAE,WAAA1D,OAAa8D,EAAK9C,IACpB+C,MAAO,CAAEC,eAAgB,OAAQC,MAAO,SAAUjB,SAAA,EAElDE,EAAAA,EAAAA,KAACf,EAAQ,CACP+B,IACEJ,EAAKK,YAAW,mCAAAnE,OACuB8D,EAAKK,aACxC,kFAENC,IAAKN,EAAKO,SAGZnB,EAAAA,EAAAA,KAACb,EAAS,CAAAW,SAAEc,EAAKO,YAdLP,EAAK9C,GAgBT,OAKhBwC,QAAQZ,EAAMa,UACdP,EAAAA,EAAAA,KAAA,KAAAF,SAAG,sDAIX,E,kBCtDe,SAASsB,IAAc,IAADC,EACnCC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/B5B,EAAK8B,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAA4BC,EAAAA,EAAAA,MAAiBC,GAAAJ,EAAAA,EAAAA,GAAAE,EAAA,GAAtCG,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAElBG,EAA+B,QAAtBX,EAAGS,EAAOG,IAAI,gBAAQ,IAAAZ,EAAAA,EAAI,GAwBzC,OAXAa,EAAAA,EAAAA,YAAU,WACgB,SAAAC,IAMvB,OANuBA,GAAA7F,EAAAA,EAAAA,GAAAC,IAAAA,MAAxB,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAE2BS,EAAAA,EAAAA,IAAmB2E,GAAW,KAAD,EAA9CvF,EAAQC,EAAAK,KACdqF,QAAQC,IAAI5F,EAAS6F,SACrBZ,EAASjF,EAAS6F,SAAS5F,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAA6F,GAAA7F,EAAA,kCAAAA,EAAAQ,OAAA,GAAAV,EAAA,mBAE9BW,MAAA,KAAAC,UAAA,EAPc,WACS+E,EAAAhF,MAAC,KAADC,UAAA,CAOxBoF,EACF,GAAG,CAACR,KAGFhC,EAAAA,EAAAA,KAAA,OAAAF,UACEE,EAAAA,EAAAA,KAACR,EAAU,CACTE,MAAOA,EACPD,OAAQ,SAAAgD,IA1BO,SAAAA,GACnBA,EAAEC,iBACF,IAAMV,EAAYS,EAAEE,OAAOC,MAAMC,MACjCf,EAAOgB,IAAI,QAASd,GACpBD,EAAUD,EACZ,CAsBQiB,CAAaN,GApBF,SAAAA,GACjBA,EAAEE,OAAOC,MAAMC,MAAQ,EACzB,CAmBQG,CAAWP,EACb,KAIR,C","sources":["components/api.js","components/SearchList/SearchList.styled.js","components/SearchList/SearchList.js","pages/MoviesPage.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '14d9418a13ba1f50c8b95263b7df6dda';\n\nconst END_POINT_TRENDING = 'trending/movie/day';\nconst END_POINT_MOVIES_BY_QUERY = 'search/movie';\nconst END_POINT_MOVIES_BY_ID = 'movie/';\n\nexport const fetchMovies = async () => {\n  //   const OPTIONS = new URLSearchParams({\n  //     key: API_KEY,\n  //     q: query,\n  //     image_type: 'photo',\n  //     orientation: 'horizontal',\n  //     page: page,\n  //     per_page: 12,\n  //   });\n  // const response = await axios.get(`${BASE_URL}?${OPTIONS.toString()}`);\n  // return response.data;\n\n  const response = await axios.get(\n    `${BASE_URL}${END_POINT_TRENDING}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\n// 'https://api.themoviedb.org/3/search/movie?query=batman&include_adult=false&language=en-US&page=1'\n\nexport const fetchMoviesByQuery = async query => {\n  const response = await axios.get(\n    `${BASE_URL}${END_POINT_MOVIES_BY_QUERY}?query=${query}&api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\n// https://api.themoviedb.org/3/movie/1125311?language=en-US\n\nexport const fetchMoviesById = async id => {\n  const response = await axios.get(\n    `${BASE_URL}${END_POINT_MOVIES_BY_ID}${id}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\n// https://api.themoviedb.org/3/movie/movie_id/credits?language=en-US\n\nexport const fetchMoviesCredits = async id => {\n  const response = await axios.get(\n    `${BASE_URL}${END_POINT_MOVIES_BY_ID}${id}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}${END_POINT_MOVIES_BY_ID}${id}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieContainer = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 262px);\n  gap: 16px;\n  justify-content: center;\n  list-style: none;\n`;\n\nexport const MovieItem = styled.li`\n  border: 1px solid black;\n  border-radius: 4px;\n  &:hover,\n  &:focus {\n    box-shadow: 4px 4px 20px 0px rgba(0, 0, 0, 0.7);\n  }\n`;\n\nexport const MovieImg = styled.img`\n  width: 100%;\n  height: 336px;\n`;\n\nexport const MovieText = styled.h2`\n  text-align: center;\n  padding: 5px;\n  /* margin: 0; */\n`;\n\nexport const StyledLink = styled(Link)`\n  color: black;\n  font-weight: 500;\n  text-decoration: none;\n  margin-top: 10px;\n  display: block;\n  &:hover,\n  &:focus {\n    color: #a19b19;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport {\n  MovieContainer,\n  MovieImg,\n  MovieItem,\n  MovieText,\n  StyledLink,\n} from './SearchList.styled';\n\nexport const SearchList = ({ submit, movie }) => {\n  const location = useLocation();\n\n  return (\n    <div>\n      <form onSubmit={submit}>\n        <input\n          name=\"input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      {Boolean(movie.length) && (\n        <StyledLink to={'/movies'} state={{ from: location }}>\n          â¬… Go back\n        </StyledLink>\n      )}\n\n      {Boolean(movie.length) && (\n        <MovieContainer>\n          {movie.map(item => (\n            <MovieItem key={item.id}>\n              <Link\n                to={`/movies/${item.id}`}\n                style={{ textDecoration: 'none', color: 'black' }}\n              >\n                <MovieImg\n                  src={\n                    item.poster_path\n                      ? `https://image.tmdb.org/t/p/w342/${item.poster_path}`\n                      : 'https://www.russorizio.com/wp-content/uploads/2016/07/ef3-placeholder-image.jpg'\n                  }\n                  alt={item.title}\n                />\n\n                <MovieText>{item.title}</MovieText>\n              </Link>\n            </MovieItem>\n          ))}\n        </MovieContainer>\n      )}\n\n      {!Boolean(movie.length) && (\n        <p>No results found. Please type name on the movie</p>\n      )}\n    </div>\n  );\n};\n","import { SearchList } from 'components/SearchList/SearchList';\nimport { fetchMoviesByQuery } from 'components/api';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nexport default function MoviesPage() {\n  const [movie, setmovie] = useState([]);\n  const [params, setParams] = useSearchParams();\n\n  const movieName = params.get('query') ?? '';\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const movieName = e.target.input.value;\n    params.set('query', movieName);\n    setParams(params);\n  };\n\n  const resetInput = e => {\n    e.target.input.value = '';\n  };\n\n  useEffect(() => {\n    async function getMovies() {\n      try {\n        const response = await fetchMoviesByQuery(movieName);\n        console.log(response.results);\n        setmovie(response.results);\n      } catch (error) {}\n    }\n    getMovies();\n  }, [movieName]);\n\n  return (\n    <div>\n      <SearchList\n        movie={movie}\n        submit={e => {\n          handleSubmit(e);\n          resetInput(e);\n        }}\n      />\n    </div>\n  );\n}\n"],"names":["BASE_URL","API_KEY","END_POINT_MOVIES_BY_ID","fetchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","sent","abrupt","data","stop","apply","arguments","fetchMoviesByQuery","_ref2","_callee2","query","_context2","_x","fetchMoviesById","_ref3","_callee3","id","_context3","_x2","fetchMoviesCredits","_ref4","_callee4","_context4","_x3","fetchMoviesReviews","_ref5","_callee5","_context5","_x4","MovieContainer","styled","_templateObject","_taggedTemplateLiteral","MovieItem","_templateObject2","MovieImg","_templateObject3","MovieText","_templateObject4","StyledLink","Link","_templateObject5","SearchList","submit","movie","location","useLocation","_jsxs","children","onSubmit","_jsx","name","type","autoComplete","autoFocus","placeholder","Boolean","length","to","state","from","map","item","style","textDecoration","color","src","poster_path","alt","title","MoviesPage","_params$get","_useState","useState","_useState2","_slicedToArray","setmovie","_useSearchParams","useSearchParams","_useSearchParams2","params","setParams","movieName","get","useEffect","_getMovies","console","log","results","t0","getMovies","e","preventDefault","target","input","value","set","handleSubmit","resetInput"],"sourceRoot":""}