{"version":3,"file":"static/js/816.917ca587.chunk.js","mappings":"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","sources":["components/api.js","components/CastList/CastList.styled.js","components/CastList/CastList.js","pages/CastPage.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '14d9418a13ba1f50c8b95263b7df6dda';\n\nconst END_POINT_TRENDING = 'trending/movie/day';\nconst END_POINT_MOVIES_BY_QUERY = 'search/movie';\nconst END_POINT_MOVIES_BY_ID = 'movie/';\n\nexport const fetchMovies = async () => {\n  //   const OPTIONS = new URLSearchParams({\n  //     key: API_KEY,\n  //     q: query,\n  //     image_type: 'photo',\n  //     orientation: 'horizontal',\n  //     page: page,\n  //     per_page: 12,\n  //   });\n  // const response = await axios.get(`${BASE_URL}?${OPTIONS.toString()}`);\n  // return response.data;\n\n  const response = await axios.get(\n    `${BASE_URL}${END_POINT_TRENDING}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\n// 'https://api.themoviedb.org/3/search/movie?query=batman&include_adult=false&language=en-US&page=1'\n\nexport const fetchMoviesByQuery = async query => {\n  const response = await axios.get(\n    `${BASE_URL}${END_POINT_MOVIES_BY_QUERY}?query=${query}&api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\n// https://api.themoviedb.org/3/movie/1125311?language=en-US\n\nexport const fetchMoviesById = async id => {\n  const response = await axios.get(\n    `${BASE_URL}${END_POINT_MOVIES_BY_ID}${id}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\n// https://api.themoviedb.org/3/movie/movie_id/credits?language=en-US\n\nexport const fetchMoviesCredits = async id => {\n  const response = await axios.get(\n    `${BASE_URL}${END_POINT_MOVIES_BY_ID}${id}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}${END_POINT_MOVIES_BY_ID}${id}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n","import styled from 'styled-components';\n\nexport const CastContainer = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  gap: 16px;\n  justify-content: center;\n  list-style: none;\n`;\n\nexport const CastItem = styled.li`\n  border: 1px solid black;\n  border-radius: 4px;\n  &:hover,\n  &:focus {\n    box-shadow: 4px 4px 20px 0px rgba(0, 0, 0, 0.7);\n  }\n`;\n\nexport const CastImg = styled.img`\n  width: 100%;\n  height: 264px;\n`;\n\nexport const CastText = styled.h3`\n  text-align: center;\n`;\n","import { CastContainer, CastImg, CastItem, CastText } from './CastList.styled';\n\nexport const CastList = ({ cast }) => {\n  return (\n    <CastContainer>\n      {cast.map(item => (\n        <CastItem key={item.cast_id}>\n          <CastImg\n            src={\n              item.profile_path\n                ? `https://image.tmdb.org/t/p/w200${item.profile_path}`\n                : 'https://www.russorizio.com/wp-content/uploads/2016/07/ef3-placeholder-image.jpg'\n            }\n            alt={item.character}\n          />\n          <CastText>{item.original_name}</CastText>\n        </CastItem>\n      ))}\n    </CastContainer>\n  );\n};\n","import { CastList } from 'components/CastList/CastList';\nimport { fetchMoviesCredits } from 'components/api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport default function CastPage() {\n  const [movieItem, setMovieItem] = useState([]);\n  const params = useParams();\n\n  useEffect(() => {\n    async function getMovies() {\n      try {\n        const response = await fetchMoviesCredits(params.movieId);\n        setMovieItem(response.cast);\n      } catch (error) {}\n    }\n\n    getMovies();\n  }, [params.movieId]);\n\n  console.log(movieItem);\n\n  return (\n    <div>\n      <CastList cast={movieItem} />\n    </div>\n  );\n}\n"],"names":["BASE_URL","API_KEY","END_POINT_MOVIES_BY_ID","fetchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","sent","abrupt","data","stop","apply","arguments","fetchMoviesByQuery","_ref2","_callee2","query","_context2","_x","fetchMoviesById","_ref3","_callee3","id","_context3","_x2","fetchMoviesCredits","_ref4","_callee4","_context4","_x3","fetchMoviesReviews","_ref5","_callee5","_context5","_x4","CastContainer","styled","_templateObject","_taggedTemplateLiteral","CastItem","_templateObject2","CastImg","_templateObject3","CastText","_templateObject4","CastList","cast","_jsx","children","map","item","_jsxs","src","profile_path","alt","character","original_name","cast_id","CastPage","_useState","useState","_useState2","_slicedToArray","movieItem","setMovieItem","params","useParams","useEffect","_getMovies","movieId","t0","getMovies","console","log"],"sourceRoot":""}